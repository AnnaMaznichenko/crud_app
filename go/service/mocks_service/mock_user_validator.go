// Code generated by MockGen. DO NOT EDIT.
// Source: user_validator.go
//
// Generated by this command:
//
//	mockgen -source=user_validator.go -destination=./mocks_service/mock_user_validator.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	dto "crud_app/dto"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUserValidator is a mock of UserValidator interface.
type MockUserValidator struct {
	ctrl     *gomock.Controller
	recorder *MockUserValidatorMockRecorder
	isgomock struct{}
}

// MockUserValidatorMockRecorder is the mock recorder for MockUserValidator.
type MockUserValidatorMockRecorder struct {
	mock *MockUserValidator
}

// NewMockUserValidator creates a new mock instance.
func NewMockUserValidator(ctrl *gomock.Controller) *MockUserValidator {
	mock := &MockUserValidator{ctrl: ctrl}
	mock.recorder = &MockUserValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserValidator) EXPECT() *MockUserValidatorMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserValidator) Create(ctx context.Context, user *dto.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserValidatorMockRecorder) Create(ctx, user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserValidator)(nil).Create), ctx, user)
}

// Delete mocks base method.
func (m *MockUserValidator) Delete(ctx context.Context, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockUserValidatorMockRecorder) Delete(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockUserValidator)(nil).Delete), ctx, id)
}

// Update mocks base method.
func (m *MockUserValidator) Update(ctx context.Context, user *dto.User, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, user, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockUserValidatorMockRecorder) Update(ctx, user, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUserValidator)(nil).Update), ctx, user, id)
}
